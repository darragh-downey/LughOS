name: LughOS Build and Analysis
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  actions: read
  packages: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache i686-elf toolchain
        id: cache-i686-elf-toolchain
        uses: actions/cache@v4
        with:
          path: i686-elf-tools-linux
          key: ${{ runner.os }}-i686-elf-tools-linux-7.1.0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ binutils nasm gcc-arm-none-eabi binutils-arm-none-eabi
          sudo apt-get install -y gcc-riscv64-linux-gnu binutils-riscv64-linux-gnu
          sudo apt-get install -y cmake make git qemu-system-i386 qemu-system-arm qemu-system-riscv64 unzip
          
          # Verify toolchains are available
          echo "Checking toolchain availability:"
          which arm-none-eabi-gcc || echo "arm-none-eabi-gcc not found"
          which riscv64-linux-gnu-gcc || echo "riscv64-linux-gnu-gcc not found"

      - name: Install i686-elf-gcc
        if: steps.cache-i686-elf-toolchain.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/lordmilko/i686-elf-tools/releases/download/7.1.0/i686-elf-tools-linux.zip
          mkdir -p i686-elf-tools-linux
          unzip i686-elf-tools-linux.zip -d i686-elf-tools-linux
          chmod +x i686-elf-tools-linux/bin/*

      - name: Debug extracted files
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Checking if i686-elf-tools-linux directory exists:"
          [ -d "i686-elf-tools-linux" ] && echo "Directory exists" || echo "Directory does not exist"
          if [ -d "i686-elf-tools-linux/bin" ]; then
            echo "bin directory content:"
            ls -la i686-elf-tools-linux/bin
          else 
            echo "bin directory doesn't exist"
            find . -type f -name "i686-elf-gcc" | head -n 5
          fi

      - name: Add i686-elf toolchain to PATH
        run: |
          echo "${{ github.workspace }}/i686-elf-tools-linux/bin" >> $GITHUB_PATH
          echo "Toolchain directory contents:"
          ls -la ${{ github.workspace }}/i686-elf-tools-linux/bin || echo "Unable to list bin directory"

      - name: Cache NNG build
        id: cache-nng-build
        uses: actions/cache@v4
        with:
          path: nng/build
          key: ${{ runner.os }}-nng-build-v1

      - name: Build and install NNG
        if: steps.cache-nng-build.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/nanomsg/nng.git
          cd nng
          mkdir build && cd build
          cmake -G "Unix Makefiles" ..
          make -j$(nproc)
          sudo make install
          sudo ldconfig

      - name: Verify compiler existence
        run: |
          echo "PATH=$PATH"
          which i686-elf-gcc || echo "i686-elf-gcc not found in PATH"
          find ${{ github.workspace }} -name "i686-elf-gcc"
          
      - name: Build for x86
        run: |
          export PATH="${{ github.workspace }}/i686-elf-tools-linux/bin:$PATH"
          echo "PATH=$PATH"
          which i686-elf-gcc
          make x86

      - name: Run QEMU x86 tests
        run: |
          export PATH="${{ github.workspace }}/i686-elf-tools-linux/bin:$PATH"
          chmod +x ./scripts/run_tests.sh
          ./scripts/run_tests.sh

      - name: Build for ARM
        run: |
          export PATH="${{ github.workspace }}/i686-elf-tools-linux/bin:$PATH"
          make arm

      - name: Build for RISC-V
        run: |
          export PATH="${{ github.workspace }}/i686-elf-tools-linux/bin:$PATH"
          make riscv

      - name: Run unit tests
        run: |
          export PATH="${{ github.workspace }}/i686-elf-tools-linux/bin:$PATH"
          make test || echo "Tests failed, check artifacts for details"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lughos-build-artifacts
          path: |
            build/x86/lughos.bin
            build/arm/lughos.bin
            build/*/user_hello

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            build/test-*.log
            scripts/*.log